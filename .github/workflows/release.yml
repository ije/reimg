name: Release

on:
  pull_request:
    branches: [ "main" ]
  # push:
    # tags:
    #   - "v*.*.*"

env:
  CARGO_TERM_COLOR: always
  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER: aarch64-linux-gnu-gcc
  MACOSX_DEPLOYMENT_TARGET: '10.13'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Setup Zig
        if: matrix.target == 'aarch64-unknown-linux-musl'
        uses: mlugg/setup-zig@v2
        with:
          version: 0.13.0

      - name: Install cargo-zigbuild
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          cargo install cargo-zigbuild

      - name: Install gcc-aarch64-linux-gnu
        if: matrix.target == 'aarch64-unknown-linux-gnu' || matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install musl-tools
        if: matrix.target == 'x86_64-unknown-linux-musl' || matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build (zig)
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: cargo zigbuild --release --target ${{ matrix.target }}

      - name: Build (cc)
        if: matrix.target != 'aarch64-unknown-linux-musl'
        run: cargo build --release --target ${{ matrix.target }}

      - name: Move Build
        run: du target/${{ matrix.target }}/release/reimg

      # - name: Move Build
      #   run: mv target/${{ matrix.target }}/release/reimg reimg-${{ matrix.target }}

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: reimg-${{ matrix.target }}
      #     path: reimg-${{ matrix.target }}
      #     if-no-files-found: error

  # publish:
  #   name: Publish
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Download Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         merge-multiple: true
  #         path: .artifact

  #     - name: Gzip Artifact
  #       run: gzip .artifact/*

  #     - name: Extract Release Note
  #       run: echo "## ${{ github.ref_name }}" > release-note.txt

  #     - name: Publish Release
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         body_path: release-note.txt
  #         files: .artifact/reimg-*.gz
